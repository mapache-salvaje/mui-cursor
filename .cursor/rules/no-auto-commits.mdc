---
description: Rule for automatically committing changes using conventional commits format
globs: ["*"]
alwaysApply: true
---

# No Automatic Commits

Rule to prevent committing and pushing changes without explicit user approval.

<rule>
name: no-auto-commits
description: Never commit or push changes without explicit user approval
filters:
  - type: command
    pattern: "git (add|commit|push)"
  - type: event
    pattern: "file_modify|file_create|file_delete"

actions:
  - type: reject
    conditions:
      - pattern: "git (add|commit|push)"
        message: "Automatic commits are not allowed. Wait for explicit user approval before committing changes."

  - type: suggest
    message: |
      When making changes to the repository:

      1. NEVER commit or push changes automatically
      2. ONLY commit/push when user explicitly commands:
         - "commit it" -> commit only
         - "push it" -> push only
         - "commit and push" -> do both together
      3. Follow commands exactly:
         - If user requests both commit and push, do them together
         - No extra confirmation steps between commit and push if both requested
         - Don't break combined commands into separate steps
      4. If unsure:
         - Ask if user wants to commit/push
         - Wait for explicit command
      5. Keep changes uncommitted until commanded

examples:
  - input: |
      # Bad: Automatic commits
      git add . && git commit -m "feat: add new component" && git push

      # Bad: Breaking "commit and push" into steps
      User: "commit and push it"
      AI: *commits*
      AI: "Should I push now?"

      # Good: Following exact commands
      User: "commit it"
      AI: *only commits*

      User: "push it"
      AI: *only pushes*

      User: "commit and push"
      AI: *commits and pushes together*
    output: "Follow user commands exactly, no automatic actions"

metadata:
  priority: critical
  version: 2.0
</rule>